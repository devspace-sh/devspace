version: v1beta11

images:
  proxy:
    image: proxy
    context: ./proxy
    dockerfile: ./proxy/Dockerfile
  backend:
    image: backend
    context: ./backend
    dockerfile: ./backend/Dockerfile

deployments:
- name: db
  helm:
    componentChart: true
    values:
      containers:
      - image: mysql/mysql-server:8.0.19
        args: ['--default-authentication-plugin=mysql_native_password']
        env:
        - name: MYSQL_DATABASE
          value: example
        - name: MYSQL_ROOT_HOST
          value: '%'
        - name: MYSQL_ROOT_PASSWORD
          value: /run/secrets/db-password
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
          failureThreshold: 5
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - containerPath: /var/lib/mysql
          volume:
            name: db-data
            readOnly: false
        - containerPath: /run/secrets/db-password
          volume:
            name: db-password
            subPath: db-password
            readOnly: true
      restartPolicy: Always
      service:
        ports:
        - port: 3306
        - port: 33060
      volumes:
      - name: db-data
        size: "5Gi"
      - name: db-password
        secret:
          secretName: db-password
- name: backend
  helm:
    componentChart: true
    values:
      containers:
      - image: backend
        volumeMounts:
        - containerPath: /run/secrets/db-password
          volume:
            name: db-password
            subPath: db-password
            readOnly: true
      restartPolicy: Always
      service:
        ports:
        - port: 5000
      volumes:
      - name: db-password
        secret:
          secretName: db-password
- name: proxy
  helm:
    componentChart: true
    values:
      containers:
      - image: proxy
      restartPolicy: Always
      service:
        ports:
        - port: 80

dev:
  ports:
  - imageSelector: mysql/mysql-server
    forward:
    - port: 3306
    - port: 33060
  - imageSelector: backend
    forward:
    - port: 5000
  - imageSelector: proxy
    forward:
    - port: 8080
      remotePort: 80

hooks:
- events:
  - before:deploy
  command: |
    kubectl create secret generic db-password --from-file=db-password=./db/password.txt -o yaml | kubectl apply -f -
- events:
  - after:purge
  command: kubectl delete secret db-password --ignore-not-found
- wait:
    running: true
    terminatedWithCode: 0
  container:
    imageSelector: mysql/mysql-server
  events: ["after:deploy:db"]
- wait:
    running: true
    terminatedWithCode: 0
  container:
    imageSelector: proxy
  events: ["after:deploy:proxy"]
